# Basado en Prego-A-TargetBy-movement-sun-rankTime.yaml
# 2024-10-06
blueprint:
  name: Prego - Automatic switches/lights - By motion detection & LDR - rank of time v1.0
  description:
    Automatic switches/lights. Allows the automation of the control of lights or switches based on detected movement, based and the lack of sunlight and specific schedules (sleep time for example).
    The automation includes optionally features such as preventing activation when away from home and considering stealth mode.
  domain: automation

  #---------------
  # input
  #---------------

  input:
    in_motion_sensor:
      name: Motion sensor
      description: Choose the motion sensor that covers the designated area for evaluation.
      selector:
        entity:
          domain: binary_sensor
    in_inactivity_timeout:
      name: No Motion Duration
      description: Time in seconds with no motion to trigger
      default: 120
      selector:
        number:
          min: 1
          max: 600
          unit_of_measurement: seconds
    in_away_from_home:
      name: Are you away from home?
      description: Indicator signaling the absence of occupants at home (travel status).
      default: ''
      selector:
        entity:
          domain: input_boolean
    in_stealth_mode:
      name: Are you in stealth mode?
      description: Indicator signaling that you want to be a ninja in the home (everyone sleeping / suspicious noise).
      default: ''
      selector:
        entity:
          domain: input_boolean
    in_time_morning:
      name: Sunrise Helper
      description: Choose the time helper corresponding to sunrise.
      selector:
        entity:
          integration: input_datetime
          multiple: false
    in_time_night:
      name: Sunset Helper
      description: Choose the time helper corresponding to Sunset.
      selector:
        entity:
          integration: input_datetime
          multiple: false
    in_clock_in_time:
      name: Start of period without light time (23:00:00)
      description: From what time will this automation work?
      default: '23:00:00'
      selector:
        time: {}
    in_clock_out_time:
      name: End of period without light time (07:00:00)
      description: Until what time will this automation work?
      default: '07:00:00'
      selector:
        time: {}
    in_target_entity_control:
      name: Target switch/light to control
      description: Choose the switches/lights that you want to control automatically.
      selector:
        entity:
          domain:
            - switch
            - light
          multiple: true

#---------------
# variables
#---------------

variables:
  var_away_from_home: !input in_away_from_home
  var_stealth_mode: !input in_stealth_mode
  var_target_entities: !input in_target_entity_control
  var_bol_away_from_home: "{{ not (states(var_away_from_home) == 'off' or states(var_away_from_home) == 'unknown') }}"
  var_bol_stealth_mode: "{{ not (states(var_stealth_mode) == 'off' or states(var_stealth_mode) == 'unknown') }}"

#---------------
# Automatizacion para enceder la luz al detectar movimiento.
#---------------

trigger:
  - platform: state
    entity_id: !input 'in_motion_sensor'
    id: trigger_motion_start
    to: 'on'
  - platform: state
    entity_id: !input 'in_motion_sensor'
    id: trigger_motion_end
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: !input 'in_inactivity_timeout'
  - platform: time
    id: trigger_time_morning
    at: !input 'in_time_morning'
  - platform: time
    id: trigger_time_night
    at: !input 'in_time_night'

#---------------
# conditions
#---------------

condition:
  - condition: template
    # Verifica si al menos una luz está apagada (lista para encender)
    # Verifica si al menos una luz está encendida (lista para apagar)
    value_template: >
      {{
      (trigger.id == 'trigger_motion_start' and
      expand(var_target_entities) | selectattr('state', 'eq', 'off') | list | length > 0) 
      or
      (trigger.id == 'trigger_motion_end' and
      expand(var_target_entities) | selectattr('state', 'eq', 'on') | list | length > 0) 
      or
      trigger.id == 'trigger_time_morning'
      or
      trigger.id == 'trigger_time_night'
      }}

#---------------
# Actions
#---------------

action:
  - choose:
      - conditions:
          #---------------
          # Case 1 - To turn ON the light when motion is detected.
          #---------------
          - condition: trigger
            id:
              - trigger_motion_start
              - trigger_time_night
          - condition: template
            value_template: '{{ not var_bol_away_from_home }}'
            # In home
          - condition: template
            value_template: '{{ not var_bol_stealth_mode }}'
            # No ninjas at home
          - condition: state
            entity_id: !input 'in_motion_sensor'
            state: 'on'
            # Motion detected
          - condition: or
            conditions:
              - condition: time
                after: !input 'in_time_night'
                # After time
          # EXTRA solo en rango de tiempo
          - condition: not
            conditions:
              - condition: time
                after: !input 'in_clock_in_time'
                before: !input 'in_clock_out_time'
        sequence:
          - service: homeassistant.turn_on
            target:
              entity_id: !input 'in_target_entity_control'
        alias: Turn on the target
      - conditions:
          #---------------
          # Case 2 - To turn OFF the light when movement is finished.
          #---------------
          - condition: trigger
            id:
              - trigger_motion_end
          - condition: state
            entity_id: !input 'in_motion_sensor'
            state: 'off'
        sequence:
          - service: homeassistant.turn_off
            target:
              entity_id: !input 'in_target_entity_control'
        alias: Turn off the target
      - conditions:
          #---------------
          # Case 3 - para apagar la luz al tener luz de dia.
          #---------------
          - condition: trigger
            id:
              - trigger_time_morning
        sequence:
          - service: homeassistant.turn_off
            target:
              entity_id: !input 'in_target_entity_control'
        alias: Turn off the target - it's already morning!
mode: single
